{
    "prof_info": [
        {
            "prof_name": "Adam Cannon",
            "prof_id": 515,
            "total_reviews": 81
        }
    ],
    "reviews": [
        {
            "course_name": "Intro to Computer Science- Programming in Java",
            "review_date": "May 22, 2021",
            "review_content": "\nI found this class incredibly elitist. Professor Cannon constantly made jokes/comments about how special/smarter-than-everyone-else Columbia students are. He also dropped his air of kindness and approachability to snap at students in lectures who asked something he didn't like. I'm guessing from the positive reviews that many students enjoy getting their egos stroked for attending a top school, but it just screams of insecurity. He even compared Columbia to San Jose State once just to flex how much \"smarter\" his students are... I have no idea why he felt the need to make fun of an institution with far fewer resources that makes higher education more successful. He's nice enough but seems caught up in prestige and unable to see the enormous privilege he himself holds.\nIn addition, the class was average at best at introducing java. Cannon assigned large portions of a textbook to explain many topics that could be distilled much more efficiently through slides/lectures. This class was a review for me, but I could see how difficult it must have been for someone new to the material to try to sort through the readings to find the important information. \nOverall, this class is straight forward and some of the TA's are incredible. It's not the worst thing you could take, but there is so much room for improvement.\nWorkload:\nNot bad. The late work policy- 120 hours of grace time to be used throughout the semester- is generous. \n"
        },
        {
            "course_name": "Introduction to Computer Science in Java",
            "review_date": "March 22, 2021",
            "review_content": "\nI know many find this class extremely useful and engaging, but this was not the case for me. To be honest, I don't think I truly learned anything. Now I am struggling a lot in Data Structures because I don't have the basics of programming. \nProf. Cannon often gets distracted, which distracted me. Moreover, we had to learn things such as circuits or read entire chapters about what computer science means, which were really boring. \nI just wanted a class that taught me how to program, and this class didn't (again, in my personal experience)\nAlso, they took off points from your homework if you didn't indent everything the way he wanted. I think this is pretty pointless because in Data Structures they don't care about that. \nWorkload:\nNo final, quizzes that were worth A LOT, hw\n"
        },
        {
            "course_name": "Introduction to Computer Science in Java",
            "review_date": "January 02, 2021",
            "review_content": "\nProfessor Cannon is super nice and makes the lectures engaging. His online lecture was my only class that was able to sort of replicate an in-person experience.\nMy only complaint with the course was the grade weighting. Be warned, the class was not curved this semester since we had no mid-term or final. After the pdf deadline, we received a notification from courseworks that the grade weights had changed. This caused averages to drop by around three points and for me, a full letter grade (I'm not sure if this was a mistake on Cannon's part or courseworks but it was frustrating regardless). \nThe quizzes were supposed to be low stress, but a single question counted for a whole grade percentage point. A single question on the quiz could have a major impact on your grade.\nOverall, Professor Cannon does a solid job given COVID, but I think the grading system could use some tweaks. I'm pretty sure he will make those changes though as this semester was a trial run of sorts.  \nWorkload:\nA lot if it's your first computer science class. Alternates weekly between problem sets and projects. Also alternates weekly between exercises (not normally finished in class but not due until the next day) and quizzes/\n"
        },
        {
            "course_name": "Intro to Computer Science- Programming in Java",
            "review_date": "December 29, 2020",
            "review_content": "\nProfessor Cannon is funny, approachable, caring, and knowledgeable about Java. His classes are very entertaining as he is an amazing lecturer, and one can tell that he really cares about his students a lot. I took this class during COVID, and he was very understanding and tried to make the class as least stressful as possible. \nThis class is not an easy A tho. If you have programmed before, it might be a little easier, but for someone who has little background, the class can get time consuming and hard. However, no matter what you'll end up learning a lot about java and also some interesting stuff about Von Neumann Architecture and Logic Gates. \nThe TAs are very helpful. There are a lot of them, so there are office hours basically 24/7. That said tho, because of COVID, office hours can be a little bit crowded because it is easier for people to go. If you have the patience and don't mind waiting for your turn, you'll get a lot of the TAs. Plus, they also offer review sessions almost weekly and those are very helpful for either the quizzes or the assignments. \nIf you like coding, take this class with Cannon. You'll learn a lot. \nWorkload:\n6 quizzes (30%)\n5 in-class exercises (20%)\n6 Programming Projects and 6 PSETS (50%)\n"
        },
        {
            "course_name": "Introduction to Computer Science in Java",
            "review_date": "December 19, 2020",
            "review_content": "\nThis dude is literally the best. Take his class!!!!!\nWorkload:\n5 psets, 5 programming projects, 6 quizzes (online workload), 5 in class exercises (TA helps with them)\n"
        },
        {
            "course_name": "Honors Introduction to Computer Science (Java)",
            "review_date": "October 20, 2020",
            "review_content": "\nFor a non CS major I absolutely do not recommend taking this class. I am a History major and was looking to fulfill my science requirement with an interesting course, unfortunately this was not It. The course itself is heavily relied on the textbook, which in my opinion is really dense and dry. Most of what he goes over in class is a clear demonstration of how well he knows the subject, but is hard to understand (especially with no CS/programming experience). The course literally goes from crawl to run within a matter of weeks and if you haven't gotten a good grasp at that point then good luck! I struggled after the first few weeks, and unfortunately was stuck in the course due to the credit requirement that I needed to have to be full time. In a nutshell, he is an excellent professor with an incredible knowledge base of programming, but for someone who has never taken CS it will be tough to understand\nThe key takeaway that I got from this course was at least understanding how to read code and correct errors within a program. If your ready for a challenge then take this course, but just understand by no means is this course easy, and you will have to dedicate a decent amount of time each week in order to understand the material. They also shifted to using Gradescope to submit homework assignments, which can be a bit annoying and confusing to learn how to navigate. \nWorkload:\nThe course has a either a problem set or a programming project due every week and he periodically gives in class quizzes (5 questions each). The TA's do have many office hour time slots and do offer to help, however, if you haven't understood the material enough to ask the right questions then your kind of stuck by that point. The problem sets weren't all too bad, some of them you could find within the textbook, and others you could look up online. The programming projects took up alot of time, and at the beginning of the semester he clearly explains that you would have to dedicate at least 8-10 hours a week in this course- he wasn't lying! \n\n"
        },
        {
            "course_name": "Intro to Computer Science- Programming in Java",
            "review_date": "July 27, 2020",
            "review_content": "\nProf. Cannon is fantastic and really funny. His lectures are well organized, clear, and he's incredible patient at explaining concepts regardless of how menial the question might feel. He clearly cares about his students' learning experience and tried to make the online transition as interactive as it could be. I thought the course was difficult if you've never programmed before (and some people in the class clearly had) which gave an unfair advantage and little curve. There is A LOT of reading, especially from the computer science textbook that's quite dry. Written problems were assigned from there and I would read the chapter but not have a clue how to do them. The java textbook is great though and very helpful.\nWorkload:\nMedium to heavy, depending how much prior programming experience you have. If none, it's doable if you put in the hours to understand the concepts fast enough to keep up.\n"
        },
        {
            "course_name": "Intro to Computer Science- Programming in Java",
            "review_date": "May 21, 2020",
            "review_content": "\nHonestly this class was not fun at all. I had taken 1006 in the semester before I took 1004 and I LOVED it... my logic was \"omg 1006 was so much fun and I learned a lot with great projects and other assignments so I bet 1004 will be just as helpful and I'm going to learn a lot in java!!!\" yeah no. At the beginning the problem sets and programming projects were very easy (which I expected and I'm sure people who were taking this as their first CS class appreciated). But like after the first couple of assignments, the projects just got really repetitive and some of them were dumb hard for an introductory level course. Also Codio is the worst IDE. Why they use it, I have no idea.\nThe worst part is, that I feel like I barely know anything about java. The only thing I took away from this class is that java uses a lot of semi-colons and brackets? I guess I learned a little bit about the internet and Von Neumann architecture? \nThe midterm was straightforward I guess, as was the final (but I took this class during the corona semester so idk what the real final would have looked like).\nTLDR; if you're not a CS major and just want a fun intro class, take 1006 or 1002. This class is a lot of work with no reward. I spent an entire semester in the class and I still barely know any java. I used guess and check for the projects (like I would write the code that I think would work, check if it complied, look for the errors which were usually pretty minor syntax errors)\nWorkload:\n5 programming projects (all on Codio) \n5 problem sets (usually written problems, sometimes they have a coding question)\nThe 10 total assignments lead up to being 40% of your grade-- so do them and do them well and you will probably get an A\n1 Midterm (25% of the grade)\n1 Final exam (35% of the grade)\nThis is standard from each semester and the makeup of the class did not change when we went online. \n"
        },
        {
            "course_name": "Intro to Computer Science- Programming in Java",
            "review_date": "May 14, 2020",
            "review_content": "\nCannon is great! He clearly cares about his students. Would recommend this course even if you aren't a CS major (if you are willing to put the work in).\nWorkload:\na lot, but you also learn a lot\n"
        },
        {
            "course_name": "Introduction to Computer Science in Java",
            "review_date": "May 11, 2020",
            "review_content": "\nFull disclosure: I had no exposure to Java prior to taking the course, but I did have decent experience with Python and didn\u2019t have much trouble keeping up with Cannon. The intensity of the workload will be entirely dependent on how much programming experience you already have and/or how fast you can adapt to algorithmic thinking.\nCannon lives up to the hype. He\u2019s an excellent lecturer for an intro class, and he has a great sense of humor. While it\u2019s true that he doesn\u2019t cover the Java syntax as much as some people would like him to, I appreciated his emphasis on conceptual understanding, namely what\u2019s happening behind the scenes of your code. Still, I recommend reading or skimming the corresponding sections of the textbooks before attending lecture to get the whole picture.\nCannon doesn\u2019t exactly hold your hand, but he does provide several resources to help you catch up to speed if you\u2019ve never programmed before. Office hours are held almost all the time thanks to the army of TAs, there are optional review sessions on Fridays, and there\u2019s a separate lab session (again, optional) that runs on Tuesdays and Saturdays (you pick one of the two days to attend regularly). Like most STEM classes, Cannon reserves his A-range for the top third of the class; the cutoff for an A- is around 85% in a typical semester, the cutoff to pass is 55%, and the average is curved to \"a high B, not a B+.\" However, you are nearly guaranteed a good grade if you put in the time and effort, and it\u2019s almost impossible to fail as long as you at least try on the homework.\nWorkload:\nHomework (40%) - 6 written problem sets and 5 programming projects. The problem sets took me about an hour each, and I only found projects 3 and 4 to be a little time consuming. Even if you\u2019re new to CS, I think it\u2019s relatively easy to make perfect/near-perfect scores on all of them as long as you follow directions and clarify your doubts on Piazza/during OH as soon as they come up. ADHERE TO THE STYLE GUIDE RELIGIOUSLY! The TAs can be real sticklers about the formatting of your code and the actual files you submit. For example, forgetting to rename a folder before zipping it leads to a point deduction even if you renamed it after zipping.\nMidterm (25%) - 10 definitions and 40 multiple choice questions. It\u2019s a cakewalk if you get your hands on past exams. The mean was about a 78 in my semester.\nFinal (35%) - It mirrors the midterm for the most part, but it also includes a section where you debug code by hand. Pay attention to the code that Cannon goes over in class, as he makes it clear that anything he\u2019s covered is fair game.\n"
        },
        {
            "course_name": "Java",
            "review_date": "May 04, 2020",
            "review_content": "\nProfessor Cannon is, in my opinion, one of the best educators I have experienced in my entire life. He is very very knowledgeable about the subject. But he is also able to transmit that knowledge so that his students understand it. He explains clearly, succinctly, and well. \nCannon is always available in his frequent office hours, and the TAs (of which there are about 20, and all of whom are amazing as well) also have office hours every day (including Sundays and occasionally Saturdays). \nYou get 120 hours of \"grace time\" in the Spring semester (I believe it's 150 hours in the Fall). You can use all, none, or any amount of this. TAKE ADVANTAGE OF IT. It is an incredible resource to have. \nAs for the workload: I had very minimal CS experience coming into this. However, I've still managed to understand everything he talks about because the man is a supremely good lecturer. \nIf you have the opportunity to take a class with him, do not under any circumstances switch out! It is worth changing the rest of your schedule to accomodate his class.\nWorkload:\nI took this class during covid, so they took out one of the psets and projects. \n5 psets, 5 projects, midterm and final. \n"
        },
        {
            "course_name": "Emerging Scholar's Program",
            "review_date": "April 19, 2020",
            "review_content": "\nESP is not your typical CS class. It\u2019s a small seminar that meets every Friday, and it only counts for a single pass/fail credit. Topics range from applications of basic algorithms to general overviews of machine learning and ethics. I thought the class was a good way to see the specific ways a CS degree can be applied in industry and academia. Cannon is listed as the professor for the course, but he doesn\u2019t actually teach it; everything is handled by the PhD coordinators and the undergrad discussion leaders, but they all have solid CS backgrounds and know their way around the department. Even if you\u2019re set on doing CS, I strongly recommend it as a networking opportunity, as you\u2019ll be able to meet several distinguished faculty members and learn about their research (hint hint).\nWorkload:\nNo homework. Just show up to class. You get 1 free absence. You have to write a short paper if you miss 2 classes, and you\u2019ll fail after the 3rd absence.\n"
        },
        {
            "course_name": "Intro to Computer Science- Programming in Java",
            "review_date": "May 20, 2019",
            "review_content": "\nI think Cannon was a really good teacher and lecturer. He is entertaining during his lectures, and although he can seem a little unapproachable, he is much less intimidating if you go talk to him during office hours. He also responds to emails quickly if there is a logistics issue. I took AP CS, so the content of the class wasn't that difficult, though there are things to learn even if you did take AP CS, like Turing machines, Dijkstra's algorithm, exception handling, von Neumann architecture, and information about the layers of computer networks. (If you know all of that and took AP CS you could potentially skip to Data Structures, though it was nice to be able to review everything I already knew to really get a firm grip on the material.) I could see the class being a little difficult for people going in with no experience as he doesn't really explain the syntax in depth and you probably will need to do a fair about of self teaching, but conceptually he does a great job explaining everything. I found the midterm and final pretty easy. They were mostly definitions and multiple choice and the final had coding and short answer. Just make sure you pay attention during lecture to all the details. He actually does tell you the answers to some of the harder questions during class. I also really appreciated his organization. Problem sets and projects come out on a timely basis each week. He often codes live for you as well and sends you the code that is done is class, which is helpful. \nWorkload:\nA programming project due every other week (5 total), and on the weeks the project is not due, a written pm set (6 total). 1 midterm, and 1 cumulative final.\n"
        },
        {
            "course_name": "Intro to Computer Science- Programming in Java",
            "review_date": "December 06, 2018",
            "review_content": "\n\"A cow says 'moooo.' Right? Are you guys getting this? C'mon. If you're not, you're going to have a hard time on the exam next week.\"\nWorkload:\n:)\n"
        },
        {
            "course_name": "Theory of Knowledge",
            "review_date": "April 24, 2018",
            "review_content": "\nThere wasa lot of sexual tension between these two... it was very distracting in what i wanted to be a simple home economics class. i didn't learn very much, but i definitely learned a lot about myself.\nWorkload:\nheavy, yet also light\n"
        },
        {
            "course_name": "Introduction to Computer Science in Java",
            "review_date": "April 24, 2018",
            "review_content": "\nHe is the love of my life\nWorkload:\nweekly problem sets/programming projects\n1 midterm; 1 final\n"
        },
        {
            "course_name": "Intro to Computer Science- Programming in Java",
            "review_date": "January 01, 2018",
            "review_content": "\nProfessor Cannon is seriously amazing! He explains hard concepts in a way that is easy to understand. He is also available during office hours and super helpful. I wish I can take more classes with him. \nWorkload:\nProjects or problem set due almost every week. If I remember correctly, you get the problem set and project at the same time and get a week to complete the problem set, and two weeks for the project. They take some time to complete, but you learn a lot from them. \n"
        },
        {
            "course_name": "Introduction to Computer Science in Java",
            "review_date": "December 07, 2017",
            "review_content": "\nI have truly loved my experience in Intro to Java with Professor Cannon. I had a bit of experience before the class but this class has made me think critically about what it means to be a computer scientist, and how becoming a computer scientist is more than just programming. I think Cannon is engaging and hilarious during lecture, and is great about answering questions throughout class. He is incredibly understanding and looking out for the mental health and well-being of his students. When I have come into situations this semester when I have needed an extension or extra assistance he has been extremely accommodating. He is also accommodating with ODS accommodations. Even if you think you do not want to be a computer science major, I believe you should take this class! Don't let people scare you away from it, it has been my best course this semester.\nWorkload:\nA lot of work but it's worth it!!! Start your assignments early, and you'll be great. I'm going to become a tutor for this class just come to me!\n"
        },
        {
            "course_name": "Intro to Computer Science- Programming in Java",
            "review_date": "December 07, 2017",
            "review_content": "\nWord of warning: only take this class if you are willing to put in the work. You will probably spend at least 8 hours a week on each homework. \nHowever, it's the class I've felt like I've learned the most at my time at Columbia. It is incredibly rewarding if you like knowledge and new concepts. Do not take for a requirement if you don't care about learning something new. Read through the textbook and go to lectures and you will be okay. \nCannon is funny and sweet and you can tell he cares a lot about the course. Entertaining lecturer.\nWorkload:\n1 homework project or problem set every week.\n1 midterm, 1 final.\n"
        },
        {
            "course_name": "Computing in Context",
            "review_date": "November 15, 2017",
            "review_content": "\nAt the beginning of the semester Cannon will try to trick you into thinking that this class is suitable for people with no programming background. Do not, I repeat, DO NOT listen to him. The first portion of the class is doable, but the second half of the class isn't even covered in the textbook and is next to impossible. His tests are hard. I'm a history major, and I did the humanities track of the course because I thought it might give me some valuable skills. It did not. Instead I was left frustrated again and again and very turned off from computer science. Maybe he is good in Java, but I think he is a poor instructor in Python and should have spent more time and assignments explaining the concepts before throwing us in to very difficult homework sets to \"apply our skills.\" \nWorkload:\n6 homeworks - 3 of which are very hard and require many hours of work\n3 quizzes - harder than they should be for an intro course such as this\n"
        },
        {
            "course_name": "Introduction to Computer Science in Java",
            "review_date": "September 06, 2017",
            "review_content": "\nProfessor Cannon is great. A truly wonderful teacher. That does not mean he is easy; he is expectant because he wants to do justice to both his students and the reputation of Columbia in the Computer Science community. Cannon is a tough but fair grader. Go to his office hours if you need help as he is more than willing to lend a hand.\nI wish he taught more courses.\nWorkload:\nMedium-heavy to heavy.\n"
        },
        {
            "course_name": "Introduction to Computer Science in Java",
            "review_date": "May 05, 2017",
            "review_content": "\nAdam Cannon is a great professor if you're looking into the computer science field. He is a very good lecturer and explains the material very well. Along with that he keeps the class light and interesting so you won't lose focus. This is not a lecture you can skip though (well you can but I would not advise it), the class moves very fast and if you don't go you could miss out on important information for the problem sets and programming projects. This is a great class to take if you don't have any experience in the computer science field. Do not be discouraged if you don't understand stuff in the beginning the learning curve is big for this class. Along with that the TA's are very knowledgable and will help a lot. They all have different office hours as well as on Sundays when you can go to the class room for more help. There also is a Piazza page for the class to ask questions and they will answer fairly fast. Also, the curve is pretty big for this class. \nWorkload:\nThe weeks alternate between a problem set and programming project(Do not leave these to the last minute); 1 chapter of reading a night (DO IT or you will not understand the homework's at all); Midterm in class with definitions and multiple choice (the practice questions he give are very similar to what you will see on the test and if you can get your hands on someone else's midterm from a past semester of his class it is super helpful and similar); Final with definitions, multiple choice, and short answer which includes writing some code; Heads up this is not an easy A course\n"
        },
        {
            "course_name": "Intro to Computer Science- Programming in Java",
            "review_date": "January 26, 2017",
            "review_content": "\nCannon is a very engaging lecturer who explains the material pretty well. His jokes elicit a non-zero amount of laughs consistently, he jokingly thinks the class hates him, and he gives you riddles that have only a tangential relation to the class. \nMore importantly, this class provides you with a bunch of background knowledge for CS, moreso than any Java programming proficiency, something that will come in Data Structures. It's a wide breadth with a little depth, but he and the TAs do an admirable job explaining concepts and answering questions, preparing you for the (reasonable) midterm and final.\nWorkload:\nHW: It's weighted quite high, with alternating problem sets and programming assignments week by week. You get some credit if your code compiles and if your style is good, which is good if you can't figure something out once in a while.\nMidterm: a mixture of term recall and multiple choice, mostly covering concepts in Java and sorting algorithms.\nFinal: cumulative, terms, multiple choice, and a few short answer problems. If you do way better on the final he will weight the midterm less for you.\n"
        },
        {
            "course_name": "Introduction to Computer Science in Java",
            "review_date": "January 09, 2017",
            "review_content": "\nI really enjoyed this class. I had some programming experience in high school, which was very helpful, but there are lots of people who don\u2019t have experience and still do well. If you are interested in the subject and willing to work hard, this class is very doable. Cannon wants you to succeed and so do all the TAs. There are tons of office hours, which you should go to right away if you are confused, especially at the beginning of the semester because computer science builds on itself. My advice is to start the projects early (seriously, look at the prompt before class and then try to do half of it by the next class and then finish before the deadline) and get help often. You might want to look at some online coding courses before hand, but it isn\u2019t necessary. Many people take this class having never looked at code before in their life and are fine, but it is definitely harder because coding is a new way of thinking that might not work for you. Also, it is important to go to class because there were several questions on the final that are based on programs we went over in class but weren\u2019t explained in the textbook. \nWorkload:\nHeavy (8-10 hours per week)\nAlternating problem sets and programming projects\nMidterm\nFinal\n"
        },
        {
            "course_name": "Computing in Context",
            "review_date": "December 18, 2016",
            "review_content": "\nProbably the best class I've taken at Columbia so far. Definitely not the easiest way to fulfill your science requirement for the Core, but I'd guess probably one of the most fulfilling/meaningful options available, especially if you're someone who has little to no experience programming (as was the case for me). His lectures are coherent and well-planned, the TA's are helpful and accommodating, and his lateness policy is really generous (he gives you 170 grace hours for the whole semester, which you can use to submit assignments after the due date without any penalty). Like I said, not immediately easy material for sure, but really worth the temporary struggle for what you get out of it. You'll learn a lot. This class blew my mind. Take it.\nWorkload:\nPretty average for a 4-point lecture, maybe a bit heavier to be honest. Programming projects once every two weeks and three non-cumulative midterms (he curves all three afterwards and drops your lowest grade). If you show up to the lectures, the homework assignments aren't really that bad at all.\n"
        },
        {
            "course_name": "Intro to Computer Science- Programming in Java",
            "review_date": "January 06, 2015",
            "review_content": "\nBe warned: Cannon does not hold your hand. He assumes that everyone in the class is wicked smaht and tailors his lectures, assignments, and exams accordingly.\nBut I strongly disagree with the reviewer below. I walked into Cannon's class with no programming background, but I found his class enjoyable and occasionally challenging. The only prerequisite you need to succeed in Cannon's class is good time management.\nStart on your assignments early, and ask questions on Piazza or during office hours when you get stuck. Read the assigned chapters BEFORE you go to lectures: Cannon does an excellent job clarifying tricky material in class.\nAim for comprehension - make a serious effort to understand difficult concepts as well as your mistakes on the assignments - and you will do very well in this class.\n--\nI do agree about what the other reviewer said about the TAs. The VAST majority of them, especially Zoe and Anusha, are just the sweetest people you'll meet on this planet, but yes, a few of them are unbelievably rude and disgustingly condescending.\nWorkload:\n6 Problem Sets, 5 Programming Projects, 1 Midterm, 1 Final\n"
        },
        {
            "course_name": "Intro to Computer Science- Programming in Java",
            "review_date": "December 20, 2014",
            "review_content": "\nI imagine this class would be very difficult to succeed in with no programming background.  I took AP Computer Science in high school, so I expected Cannon's class to be cake.  However, it still did require a good deal of effort and I felt appropriately challenged throughout the semester.  As past reviewers have mentioned, the learning curve is pretty steep, with problem set 1, and programming projects 2-4 being among the most stressful.  Cannon is not kidding when he says that the programming projects will require 10+ hours of work -- they really do!  Your best bet would be to start early on the projects and attend TA office hours whenever you hit a major rut.  \nLectures are helpful, but only as a brief summary of what you need to know.  To rely on lectures alone would leave you poorly prepared for the assignments in this class, but I think that for any technical class this goes without saying.  The two recommended textbooks are both very good resources and will be relied on heavily throughout the course.  I found that the lectures and problem sets were representative of exam content.  The programming projects, however, were not.  \nThe class is well organized, with a very clear outline of covered topics and assigned grading groups to expedite grading.  There is an entire army of TAs who rotate on a schedule to grade your problem sets/programming projects and who send you detailed grade reports VIA lionmail (more on the TAs later...).\nOverall, I think the course does a good job at its ambitious task of introducing students to the fundamentals of computer science and programming in Java.  In addition, you will also be introduced to software like: Pico, CUnix, CyberDuck, Eclipse, Vagrant VirtualBox (maybe), and Gimp.  Professor Cannon has a good sense of humor and tries to make even the duller aspects of computer science interesting.  If you commit yourself to doing all the work, the takeaway is enormous.  My only major complaint:\nTHE TAs (well, some of them):\nThe TAs are a mixed lot.  Some are truly wonderful and are willing to help you with all your NullPointerExceptions, while others seem plain butthurt about losing points for inane reasons back when they were COMS W1004 students.  Between the 6 problem sets and 5 programming projects, you'll come into contact with at least 11 of the TAs.  \nAs I mentioned earlier, your grade reports are sent to your lionmail by your TA of the week.  Frequently, students will respond to the grade report emails to ask for suggestions or for a more detailed explanation of how to improve code.  As I have heard from other students, and as I have experienced myself, this sometimes results in the TAs correcting your grade to a lower score.  What I mean is this: when the TA sees your grade report again in your reply email, they might see that they made a mistake in grading you and then will lower your score by the appropriate amount.  \nUntil the TAs start grading things without error, or until some sort of \"grade-is-set-after-sending-to-student\" policy is put into place, you should not ask the TA who graded you for pointers.  I repeat DO NOT ASK THE TA WHO GRADED YOUR ASSIGNMENT ABOUT THE ASSIGNMENT--THEY MIGHT SPOT SOMETHING THEY DIDN'T TAKE OFF POINTS FOR AND THEN PROCEED TO TAKE OFF POINTS FOR IT.\nTo me this seems rather messed up.  Isn't the best person to learn from the professional who was paid to read through every line of your code?  As things currently are, it is impractical to talk to this person because they could easily spot a mistake in their grading and then make a last-minute change on CourseWorks.  In no other class I've ever taken in my academic career have assignment grades been so impermanent.  I overheard other students in the help room speak of \"avoiding\" the TA that graded their most recent assignment in fear that they could have points deducted.  I hate to think I could have done better in this class by NOT asking the person who graded my assignment for help...\nWorkload:\n6 problem sets (cover various aspects of computer science) - take about 2-4 hours \n5-6 programming projects - take 15+ hours (not including time spent on the optional extra credit portions) \nfamiliarizing yourself with Pico, CUnix, CyberDuck, Eclipse, Vagrant VirtualBox, and Gimp - time varies\n~50 vocab terms to memorize for midterm\n~100 vocab terms to memorize for final (lots of overlap with midterm terms)\nmidterm exam with vocab terms and multiple choice q's\nfinal exam with vocab terms and multiple choice q's\n"
        },
        {
            "course_name": "Intro to Computer Science- Programming in Java",
            "review_date": "May 23, 2014",
            "review_content": "\nIf you are taking computer science first time and have had very little or no experience with programming, you will have a tough time in the class. Cannon's lectures on the programming component aren't helpful at all; the best way to deal with programming assignments is to start early, read the Big Java book, and attend office hours. \nHis lectures on the conceptual component of Computer Science are useful, though reading the book would give you the same information, but it can be more time consuming since it has a lot of unnecessary information.\nHis first midterm includes a lot of memorization and not a lot of programming examples. The programming component isn't related to the assignments at all but to the simple principles of object-oriented programming. The other component was mostly memorization. (There were questions asking the size of the 'short' data type, for instance.) The final has less questions based on memorization and can help you bump your grade since it's as long as the midterm.\nHe makes a lot of trashy jokes that most people seem to like. He also wastes a lot of time on unnecessary questions such as \"I would like to major in Computer Science; when should I take Discrete Math?\" in class. His lectures are very unfocused, and you can do fine even if you skipped some lectures. How you do in the class depends more on you and very little on lectures.\nI still do not understand why he is in charge of all the introductory computer science classes when he cannot clarify basic but important concepts.\nWorkload:\n6 problem sets - very hard to get full points on\n5 programming assignments - takes a lot of time, TAs will pay attention to silly things like whether you used spaces\n1 midterm - lots of memorization\n1 final\n"
        },
        {
            "course_name": "Intro to Computer Science- Programming in Java",
            "review_date": "May 21, 2014",
            "review_content": "\nIf you've never had any programming/Computer Science, your first class will be a bit rough, but Cannon warns his students of this. For me, the first month or two were not too challenging, but mid-semester I hit a wall. Try to to the TAs before you feel confused, and if you feel the slightest bit confused, definitely go the TA or get a tutor. Makes life much easier in the long-run. Cannon is a great lecturer (especially for python!) and throws in a good number of jokes (that are actually funny!!) He is approachable and tries to make his introductory classes challenging for all but also accessible to people who aren't taking his class for the major. He also stresses the importance of improvement, and is willing to work with you if you scored really badly on the midterm as long as you improve on the final. The TAs for both intro. classes are great! For Java, study your vocab. A LOT.\nWorkload:\nProgramming Project or Problem Set (only in Java, not Python) every two weeks. Midterm and Final. \n"
        },
        {
            "course_name": "Intro to Computer Science- Programming in Java",
            "review_date": "May 03, 2014",
            "review_content": "\nI was apprehensive about taking this course since I had no experience with programming or computer science.\nAs I look back on this semester, I have come to the conclusion that yes, it is possible to take this course without prior knowledge of programming. However, it will require a lot of work on your part. If you're up for a challenge, this is the course for you.\nIn terms of personality, Cannon is quite friendly and cracks pretty good jokes in lecture. In his office hours, I found Cannon to be quite helpful and not at all sarcastic, in contrast to what other reviewers have said (but that might be because I came on a day in which very few students were asking him for help). \nCannon is a decent lecturer, although he goes through concepts and examples very quickly. If you don't ask questions or follow up his lectures with your reading, you will get left behind. Be sure that you keep up at all times! (also, the textbooks for this class are quite helpful).\nFor problem sets and programming projects, do not procrastinate! They take much more time than you think they do (he's not kidding when he says that the class will require at least nine hours of work per week). If you get stuck, go to office hours, ask a CS friend, or use Piazza (the online messaging board) to get your questions answered. \nOverall, I'm glad that I took this course. It was challenging and I might not get the grade I want, but I'm glad that I learned something new. \nWorkload:\nEach problem set is due after a week and each programming project is due after two weeks. Get started ASAP and make sure you do a little bit of work each day!\nMidterm and final are difficult. Make sure you review the code presented in class (he might present a different version of a concept than in the book, so that's an added incentive to go to class) and read the books!\n\n"
        },
        {
            "course_name": "Introduction to Computer Science for Engineers/Applied Scientists - Python",
            "review_date": "March 31, 2014",
            "review_content": "\nAdam Cannon is not a good profesor for this class. He is undeniably good for the Intro to Java, but my experience in Python is negative. He knows his stuff, and while excuses have to be made since this is only the 3rd year this course exists, he is still refining the curiculum. However, while the cotent of the lectures was interesting (read: sometimes, other times not falling asleep was hard) they were only vaguely related to the homework, and most of the time, were it not for online documentation on Python, me and all my friends in the class would have failed. Although he leaves time in lecture for questions, his sometimes sarcastic answers and interactions with students discourage many from asking. Oftentimes, he will not actually answer the question posed in class, just tells you to \"deal with it\" in a roundabout way, or gives a non-sensical answer. His office hours dont help: although he holds the same amount of office hours as other professors, he is teaching about 400 students at a time, so there is always at least a 10-20 student line waiting to talk to him during office hours. To be fair though, there are about 5 TAs, though they often are not clear on the specific requirements of the assignment and will sometimes give you wrong information if you ask a mildly specific/complex question on the problem sets. Desperate emails sent the day before the homework is due dont get answered until after the dealine (though to be fair, he warned us that he would take minumum 1 or 2 days to respond due to the impressive amount of emails he gets). \nOverall, although Cannon is a good teacher, he is not good for this course. The learning curve is very slow for the first 3 weeks, and gets incredibly hard after that. While about half the students in the class have programmed before, for the half who have not, the problema set take significantly more hours tan the 8-12 Cannon gives as reference. So start early. DO NOT LEAVE IT UNTIL THE DAY BEFORE OR YOU WILL NOT FINISH. \nAvoid this class unless you actually have to take it or you are pursuing a mayor/minor/concentration/ect in computer science or related fields. Takes up more time tan what is justified for a class that does not related or is not required for your degree (it is ridiculous how much time it takes away from studying for those clases which actually count towards your degree)!).\nWorkload:\n35% - biweekly problem sets, usually 12-15hr if no experience (sometimes he will split it into phase 1 due after 1 week and pahse 2 due in 2 weeks to make sure students do not leave it until the last minute)\n25% - midterm, multiple choice, relatively easy after doing the problem sets\n40% - final\n"
        },
        {
            "course_name": "Intro to Computer Science- Programming in Java",
            "review_date": "January 15, 2014",
            "review_content": "\nIf you're only going to take one Comp Sci course take Java with Professor Cannon. He is fully aware that most people have never coded before and provides very structured ways to allow people to easily understand coding. He doesn't start off too quickly and provides tons of sample code which is usually very similar to the homework he gives. He is very open to peoples comments and asks for questions. Probably one of the best classes I've taken at college so far. \nWorkload:\nAlternating programming problem sets and written problem sets every week. Anywhere from 2-8 hours for the programming problem sets depending on how comfortable you are with the topic. About 2-3 hours for the written problem sets\n"
        },
        {
            "course_name": "Introduction to Computer Science for Engineers/Applied Scientists - Python",
            "review_date": "January 13, 2014",
            "review_content": "\nFirst off, there are 2 types of people that take this class: those who have programmed before, and those who have never programmed before in their life.  If you fall into the latter group, like myself, I HIGHLY recommend reading up a bit on Python before you take the class because the learning curve is steep.  This review will come from the perspective of someone with no former programming experience:\nIntro to Comp Sci for Eng/App Sci is still in its 3rd year of infancy, so Adam Cannon is still developing the curriculum for this class.  Adam Cannon is a really nice guy who often makes the types of sardonic jokes that provoke a chuckle or two, verbally assumes that his class hates him, and gives riddles at the beginning of class to those students who already know the material and can afford to spend the duration of class pondering the riddle, life itself, or if they should attend the next class.  Lectures consisted of him going through topics rather rapidly (for someone who knows nothing of Python) and explaining examples of programs posted in CourseWorks.  For people with programming experience, the feeling of rushing may not have been the case, but some topics he introduced--especially for the homework--could be quite challenging.  We did not have a textbook, which I think would have been helpful, but I believe he is getting one next semester.  Often in class, Professor Cannon would ask if there were any questions and be greeted by silence and blank stares, to which he would respond, \"If 1 of you doesn't understand something, that means 10 more of you don't understand it either,\" sigh, and move on, so ASK QUESTIONS if you don't understand something.  Those afraid to ask questions will be extremely grateful that you did.\nHomework consists of bi-weekly projects that can be very tricky, so try not to procrastinate on these because Professor Cannon will answer questions about/go over the homework in class sometimes.  That being said, he will not baby you and give you the answer, only try to lead you on a path to finding the right answer, both in class and in office hours.  The TAs are all awesome and extremely nice (even if they are all really busy), and I highly recommend going to their office hours.  Both the midterm and final are written and doable, but you should study for them, no matter what programming background you have.  Overall, although this can be a challenging class, Adam Cannon is a satisfactory teacher, but it is up to you--the student--to ask him for help if you need it.\nWorkload:\n35% bi-weekly Homework projects - can be more time-consuming than they appear, so start early!\n25% Midterm Exam - written\n40% Final Exam - written\n"
        },
        {
            "course_name": "Intro to Computer Science- Programming in Java",
            "review_date": "December 25, 2013",
            "review_content": "\nAdam Cannon is a pretty solid teacher. He knows his stuff, and is very organized when teaching. With this in mind, Intro to Java is probably one of the most challenging and time-consuming classes offered at Columbia. Unless you have to take this class for your major, be sure you REALLY want to take this class. There are much easier ways to learn coding and Java. When Cannon tells you at the beginning that this class will take at least 10 hours of work per week, he is telling the truth. Many times, the work requires a lot more than 10 hours/week. \nThere is a lot of information that Cannon tries to teach in this course. You will learn both theory and programming in this class. Because of the amount of info he tries to teach, Cannon skips over a lot of basic stuff that he expects you to learn on your own. I had no experience in programming coming in so I wish he would not have skipped over stuff. For this reason, I would only recommend this class to someone who has some experience or background in coding. Talking to many who were in the same boat as me, we had to play catch-up throughout the semester. This class is already considered difficult to those with coding backgrounds, so it makes life even more miserable when you have to put even more work into an already difficult class.\nThe TAs for the class are usually pretty helpful. I would recommend getting help from the TA that grades your assignments since some of the grading, especially the written assignments, can be very subjective. I also went to Cannon's office hours. He does not come off as the nicest or most personable person ever, but he does try to help you out. He definitely does not try or care to get to know students (at least in this class). I will give him props for his cheesy jokes that lighten up the class.\nIn the end, you really have to decide if you are willing to do the work for the class. If you just want to take this class because you think coding will be \"fun\" to learn, do not take the class. Learn coding on your own at a pace where it can be fun, exciting, and addictive. Besides those who are majoring in CS, only those who are serious about learning Java and the theory of programming in a rigorous and often cutthroat setting should take this class.\nWorkload:\nThe HW alternates between a programming assignment and written assignment. 1 midterm and 1 final. At least 10 hours/week is needed to do well in the class. Make sure you read the textbooks since he glosses over some stuff in class. Attendance is not mandatory, but you're only screwing yourself over if you skip classes.\nHeavy Workload\n"
        },
        {
            "course_name": "Intro to Computer Science- Programming in Java",
            "review_date": "May 29, 2013",
            "review_content": "\nFunny in class. Kind of mean in office hours. A fair grader. TAs in this class really care and are helpful. However, going to a TA other than the one who is going to grade your problem set is usually a waste of time because the open-ended short answer problems are subjectively and sometimes harshly graded. For programming assignments, all the TAs are amazing and Cannon gives good advice during class. \nAlso there is a generous curve at the end, which is to be expected in a class of 200+ people\nWorkload:\nHeavy. Start early. Do all the reading. This class has more reading than two science classes combined, but the book is really helpful. If you do not read, you will not do well on the midterm or final. \n"
        },
        {
            "course_name": "Intro to Computer Science- Programming in Java",
            "review_date": "April 12, 2012",
            "review_content": "\nWell, he already has his silver nugget, but let it be said: Cannon deserves it. His lectures are fun to go to, and he tries really hard. I usually feel bad when people don't laugh at his dumb jokes so I laugh pretty hard to give him some credit. I usually enjoyed going to lecture. I never brought my computer, though, because all his example code is posted on courseworks anyway. You can do your note-taking just as well in a traditional notebook, and if you know that you are easily distracted, I'd recommend not bringing a computer. The two lectures that I did bring one I may as well not even have showed up because I have no idea what happened.\nThe course itself is hard, for sure. This class is an introduction CS and programming class, so if you never took AP Computer Science in high school, you're going into a topic that you've literally never seen before, unlike most of your other classes. It's pretty satisfying, though, when a few weeks in you're already writing simple programs that can do tasks that you couldn't do a few weeks before.\nThe programming assignments are tough, especially compared to the homework which literally take maybe 1-2 hours tops. Programming takes probably 10ish hours. The singular most important advice is go to the TA office hours. There are like 8 TAs for the class. Obviously the TA hours the day before your assignment is due are going to be packed, so try to go earlier if you can. The ones in the middle of the week are literally empty so you could have one-on-one time to do your work with a TA sitting right there who sole purpose is to answer any questions you have and help with your programming.\nCannon also sets up an account for the class on this website, Piazza.com, that is basically a messaging board where people can ask questions and the TAs, other students and Cannon (occasionally) can answer questions. This is a really good resource because your question has almost always been asked by someone else, and you can ask questions anonymously.\nWorkload:\n1 programming assignment every other week (10 hours give or take 2 or 3), 1 homework every other week (1-3 hours), 1 midterm, 1 final. Midterm is multiple choice, definitions, a section of code to debug, and an algorithm with questions about it. Final from what I understand (class isn't finished yet) is the same as midterm with more multiple choice.\n"
        },
        {
            "course_name": "Intro to Computer Science- Programming in Java",
            "review_date": "January 29, 2012",
            "review_content": "\nI actually took this class last year, spring semester but haven't got a chance to review it yet. Let me just say that there aren't many classes I'd actually feel obligated to review, but this is definitely one of them.\nThis is so far the best class I've taken at Columbia. This class gives you a great overview of Computer Science, and an unmatched introduction to programming. Somehow Cannon manages to fit in a ton of material while still giving a good sense of each topic. The only exception to this would be the section of the class on computer networks, which I honestly feel could have been narrowed down to just the information about internet protocols. \nLearning object-oriented programming has a learning curve, but once you've got it, you're just coasting from then on. That's not to say projects don't take a while -- you'll spend hours trying to find bugs in your program. But in general, I think there's only a few concepts in this class that are difficult to learn, the main one being OOP. Nonetheless, Cannon and the TAs make themselves pretty available to you, and the assignments are not unreasonable. That being said, pay attention to what Cannon says: if he wants you to understand a concept by a certain homework (e.g. what objects are) you should do it, and you'll be fine.\nI think the main idea I want to convey with this review is that the work you do, while heavy, is very meaningful, and you'll learn a lot about algorithmic problem solving and programming in Java.\nWorkload:\nAs mentioned, pretty heavy, but the work you're given is very meaningful, and you'll have a far elevated understanding of programming and CS by the end of the course. Tests have tricks here and there, but if you understand the concepts they're pretty easy. I finished the final in about half the time.\n"
        },
        {
            "course_name": "Intro to Computer Science- Programming in Java",
            "review_date": "January 19, 2012",
            "review_content": "\nThis course was difficult for sure.  There was a lot of learning on one\u00e2\u20ac\u2122s own simply because there was so much material, but there were resources there for use that could make one\u00e2\u20ac\u2122s life a whole lot easier, such as TAs.  This is where I have to disagree with the previous reviewer.  Madhavan was a standout TA.  He stayed after his office hours by as much as three hours one time because people needed help.  When he was in the TA room attending office hours for his own CompSci classes, he would help 1004 kids who needed help.  No matter how many people came he would individually go through his students\u00e2\u20ac\u2122 code to find problems big and small.  He also didn\u00e2\u20ac\u2122t treat students who didn\u00e2\u20ac\u2122t know things like idiots which is more than can be said for some others of the TAs.  I would know, I went to pretty much every TA\u00e2\u20ac\u2122s office hours.  Madhavan was not an easy grader, but that\u00e2\u20ac\u2122s because he knows his stuff and demands a high standard; if you don\u00e2\u20ac\u2122t want to be held to a high standard, don\u00e2\u20ac\u2122t go to Columbia.  The TA Matt was also awesome though he wasn\u00e2\u20ac\u2122t my primary TA so I don\u00e2\u20ac\u2122t know his grading style\u00e2\u20ac\u00a6  Cannon was helpful but impersonal, class of 300\u00e2\u20ac\u00a6  You will feel accomplished after taking this class, but don\u00e2\u20ac\u2122t expect to sail.  But classes like this are why you come to Columbia, you work hard as hell, and then you get a ton out of it.\nWorkload:\nPunishing, but worth it.  Alternating problem sets and programming assignments.  Exams are straightforward and managable.  You do the time, and you will be ok.  Don't assume you are smart and will be fine.  Cannon says the first day of class, Engineers are made not born...\n"
        },
        {
            "course_name": "Intro to Information Science",
            "review_date": "January 05, 2012",
            "review_content": "\nYou've always wondered if you're secretly the next Mark Zuckerberg waiting to be unleashed. I suppose this is the class for you. You can do well, but I wouldn't say it's an easy A or B. For that, take astronomy. Don't consider taking this as a P/F, as then it won't fulfill prereqs. Drat.\nCannon is excited, smart and a pretty good teacher; it's hard to deny that. But he bizarrely spends more than half of the class lecturing on the basic components of computers and the capital-i Internet. Then he spends a lesson or two each on databases, SQL, XML and Python. Cannon prides himself on this tactic as it keeps students in the class past the drop date; he shouldn't. It should be reversed. Students learned little of import for the first half and either imploded or relied on prior ability for the second half. The workload seemed appropriate, however.\nKnowledge of programming and math isn't necessary, but will give you a major leg up.\nDon't forget office hours or TAs like I did. And spend time early on to make sure you ace the comparatively easy first few assignments. I failed the final, and this kinda saved my grade.\nNote: this class was previously known as Introduction to Computers.\nWorkload:\n1. 4 problem/hw sets every 2-3 weeks. Increasing difficulty. 40% of grade.\n2. An in-class midterm (fairly easy) and final (moderately difficult, on last day of class). Average grades were low Bs. 30% of grade each.\n3. Final hw assignment was a difficult Python program.\nFor new CS students, average at least a few hours of reading per week. Little to no extra credit.\n"
        },
        {
            "course_name": "Intro to Computer Science- Programming in Java",
            "review_date": "December 25, 2011",
            "review_content": "\nWhen you enroll into this \"Intro\" to Java class, you are signing yourself up for a scheduled butt-kicking every time a programming assignment is due. \nDo yourself a favor and start the programming assignments early, and write down all your questions so that you can meet with the TA's during office hours to sort it out. \nCannon is a fantastic teacher and he is very talented at keeping the entire class attentive during lecture. Take notes during class, because he only covers the important material, which makes sense, because that is exactly what appears on the midterm/final.\nWorkload:\nHomeworks worth 40% (2-3 from one Textbook, 2-3 from another Textbook, and 5-6 programming assignments), a midterm worth 25%, and a final worth 35%.\n"
        },
        {
            "course_name": "Intro to Computer Science- Programming in Java",
            "review_date": "December 22, 2011",
            "review_content": "\nCannon is great. He's an interesting lecturer (hilarious, and also super passionate), very receptive if you ever want to meet, has tons of office hours, and is always very fair. Also, he has tons of (useful) TA's, so basically there is always someone available whenever you need help on homework, including weekends. \nI had some experience with programming before taking this class, but I had to put a sizable amount of work into this class--the programming assignments take time. (But really, start early. The TA's can basically help you through any problems you're having if you go to office hours.) \nThat being said, this class made me want to be a computer science major. It's incredibly fun and satisfying, and was definitely my favorite class this semester.  \n\nWorkload:\nAn assignment every week alternating between a problem set, which should take maybe an hour or two, and a programming assignment, which can take between 2-10 hours. This class really is manageable, as long as you start early and get help--people who say it took them 20 hours a week probably started homework due Monday on a Friday.\nOne midterm, one final, both very straightforward---if you do the readings and understand what he's talking about in class, you'll be fine.\n"
        },
        {
            "course_name": "Discrete Mathematics",
            "review_date": "May 24, 2011",
            "review_content": "\nProfessor Cannon is great.  While his lectures aren't always structured like they're coming from an outline you can copy down, they aren't boring and they do get the information across.  The point of Discrete Math is to make you learn to think through problems, and few problems in the real world just appear in your head with a clear path to get you from A-B-C-D-E.  If it were that easy, it wouldn't be a problem that you needed to learn how to solve.  When he lectures, he doesn't just go A-B-C-D-E, he tries to get you to think about the process behind getting to E.\nThe class covered a lot of material very fast, and it definitely helped if you had a rudimentary familiarity with things like statistics, logic, and counting.  But if you didn't he gave enough information that you should have been fine.\nHis lecturing style is a bit free flowing.  He seems to have an ordered list of a dozen or so things to get through each lecture, and will work through them.   He does enjoy occasional diversions to related topics.  He clearly likes the material and manages to keep what could be a very dry topic interesting.  He welcomes questions, and is one of the best professors I've seen at being able to explain concepts multiple ways when people don't grasp them.  If you ask a stupid question, he won't sugar-coat his response, but he won't out-right mock you either.  And in one-on-one interactions, he's great.  Very approachable.\nOn the downside, he was usually 5 minutes late to class, and there was a very long lag time for homework to be graded and returned.\nAnd he LOVES his definitions.  Make sure to copy them down and memorize them for the exams.  You'll need them both for the terms section and also for the proofs.  They're the keys to the kingdom.\nWorkload:\nOne problem set every two weeks (about four hours of work)\nOne midterm\nOne final (cumulative)\n"
        },
        {
            "course_name": "Discrete Mathematics",
            "review_date": "May 18, 2011",
            "review_content": "\nI have to disagree on most accounts with the below polemic on Adam Cannon. There are two separate issues needing to be addressed here. First, whether or not Adam Cannon taught the class well, and second whether or not it was hard and time-consuming.\nI can say that I thoroughly enjoyed the class and, as usual, found Adam Cannon to be an engaging and witty lecturer. It is true, he wasn't on cruise control as he is while teaching 1004, but he was still very good. His explanations were intuitive and clear and he realized that most people taking the class had not had previous exposure to a higher level of mathematics. As a result, he time again emphasized and explained to us, the importance of thinking truly mathematically as it were. In other words, he taught us to recognize the importance and place of proofs in mathematics and stated that while examples are often helpful, they are simply not adequate to understand abstract concepts completely. He sometimes proved theorems which were not in the book, so be aware of that and occasionally makes notational mistakes on the board so don't be afraid to point them out as he often doesn't notice them afterwards. I felt lost in only one of the lectures which was the one on solving liner homogeneous and non-homogeneous recurrence relations, I don't know what happened there but it seemed like Adam Cannon was having a monologue with the board for 20 minutes.\nIn class, he asks interesting puzzles related to the material and will always give you an idea about the real-world applications of the concepts being covered. He is also just friendly and approachable. He has 4 office hours a week, which is more than most professors, although there is often a line so go early. Definitely go to office hours if you get stuck on the homeworks, he's more than happy to help. He'll rarely give away an answer but will certainly tell you how to approach any given problem.\nWorkload:\n6 homeworks assignments in the semester - we had 2 weeks to complete each assignment. They were pretty long in an absolute sense, but given that we had two weeks to solve them, the length was by no means unreasonable. A quarter to a third of the problems in each assignment were proofs but most of these followed almost straightaway from the definitions. Writing proofs was hard at first for some people, but then again learning how to write basic proofs is half the point of the class. The bulk of the time-consuming problems are in the earlier part of the assignment so you can get started early during the 2 week period. One thing I did find was that the point distributions on the homeworks could be bizarre and some hard problems had very few points assigned to them. Also the TAs sometimes graded kind of harshly so if you think they overlooked something and your solution was correct, definitely go back to them and ask.\nMidterm was easy, the 2 proofs were perhaps the only tricky part. The final was cumulative and the questions were difficult. Lots of counting problems, 4 proofs  (3 of them manageable) and some modular arithmetic. 20 points is testing vocabulary so these are basically free points and you have to learn the definitions anyway in order to do well on the proofs. It also doesn't take all that long. According to him, the class is curved to a high B so about 30-40% of people get some sort of an A.\n"
        },
        {
            "course_name": "Discrete Mathematics",
            "review_date": "May 17, 2011",
            "review_content": "\nFor a Discrete Mathematics course I felt that Cannon did pretty good job. He was enthusiastic about the course material and was clear in his presentation of core principles in Discrete Mathematics. His proofs were simpler than the textbook's but they showed the basis for core theorems and for what he expects in proofs. Cannon was also able to effectively condense a 800 page textbook into only a notebook of notes. While the textbook is huge, most of the material in the textbook are proofs and there are only a 100 or so pages of actual definitions, theorems and algorithms that you need to learn. However,I feel that Cannon was irresponsible in frequently arriving late for lecture.\nWorkload:\nThe workload is reasonable. We had 6 problem sets that take about 10-20 hours each but you get two weeks to do them. The midterm was easy (definitions, some calculations, and 2 easy proofs) but the final was extremely hard (many proofs that are not all intuitive).\n"
        },
        {
            "course_name": "Discrete Mathematics",
            "review_date": "May 12, 2011",
            "review_content": "\nCannon is definitely NOT a good discrete math teacher by any standard. In fact, he could possibly be the worst discrete math teacher at Columbia. Having had him for 1004, I thought he would be as a great a teacher at discrete math. He cursorily goes over TONS material which he seems not to have mastered well himself, but succeeds at covering it up. He assigns EXTREMELY long problem sets that are proof heavy. Attending class was a major time-sink as he would be late for class, his lectures were unorganized and his class examples trivial, not helpful at all when it came to doing the problem sets.Though discrete math is a useful class, I disagree it is the most important (as Cannon appears convinced) and he should be more considerate of this view.\nThe midterm for the class was fair, but the final impossible. Of the many faults Cannon's teaching style has, the worst is probably the fact that the final is cumulative, with approximately 700 pages worth of material--including over 300 vocabulary words and proofs--to know by heart. \nStrongly consider taking discrete math with another teacher.\nWorkload:\nExtremely heavy. 6 long problem sets--each about 18 multi-part questions. Mid-term is attemptable, but lots of material to cover (closed book, no cheat-sheet). Only gets worse with the final, with over three times the material to cover and hundreds of vocabulary words to know by heart.\n"
        },
        {
            "course_name": "Intro to Computer Science- Programming in Java",
            "review_date": "April 05, 2011",
            "review_content": "\nI am not a computer science major or a computer science person at all; I'm not a math or science or logic person in any sense of any of those terms. My mind just doesn't work that way, and I struggled with this class more than I've struggled with any other class.\nThat being said, it was probably my favorite class thus far. Cannon is just a wonderful man who makes the lectures interesting, fun, and clear. He is incredibly welcoming ad supportive, so absolutely take advantage of his office hours. Talk to him about any concerns that you have - whether it's a specific coding problem or worries about the class in general - and he will help you. \nIf you're not a computer science person, there is a lower level class that provides a lot of the background for this class, which I didn't know about, and could have done much better had I taken it. This is not an easy class, but it's very fulfilling. It's something I never could have seen myself doing, but I would absolutely recommend taking it. \nWorkload:\nIt's pretty tough. You definitely have to put the work in. Everything is doable, even if you don't have the familiarity in programming that a good majority of the class does. You'll be surprised at how capable you become, and this is one of the few classes where you are actually proud of your work and have something to show for it.\nTests are absolutely straightforward but you need to have a very deep understanding of the material. If you do all along, you won't need to study much, but if you are struggling, you'll need to put in a lot of time.\n"
        },
        {
            "course_name": "Intro to Computer Science- Programming in Java",
            "review_date": "January 24, 2011",
            "review_content": "\nCannon is a phenomenal teacher.  If you're not interested in computer science, go to class just because it's fun.  Since it is an INTRO course to computer science and java, he does a really great job at explaining concepts, etc. and will happily answer any question.  You will learn so much more from being in class than by reading the textbook.\nThat being said, read the textbook and make notes!  The midterm and final both include a vocabulary section - where you have to write a definition for the given words (note, Cannon gave us a list of 100 possible terms for the final and tested us on 10).\nThe midterm is really easy if you're prepared.  Do the work, meet with TA's, etc. etc. etc.\nThe programming assignments will take a lot of time, so definitely do NOT start the night before they are due.\nLet me say again - Cannon is a phenomenal teacher.  He is an amazing lecturer and makes class fun.  He always has a good story, funny / snide remark, or riddle / brainteaser to share. \nWorkload:\nAn assignment every week alternating between a written assignment (problems in the textbook) that is generally quite easy - and a programming assignment that is generally quite difficulty.  One midterm, one final.\n"
        },
        {
            "course_name": "Intro to Computer Science- Programming in Java",
            "review_date": "January 20, 2011",
            "review_content": "\nCannon is a great lecturer. He's very clear and has the wonderful ability to see things from a student's perspective. I believe he's been teaching this class for several years, every semester and so the class is well-planned and thought out.\nI would recommend going to all the lectures, you'll really learn a lot and also you probably won't have to spend much time reading Big Java for the assignments if you attend class. Plus Cannon always goes on random CS-related tangents every once in a while and these are generally fun and informative.\nAs for the class, it's got two components; theory (Intro to CS) and programming (Intro to Java). Theory and programming homeworks alternate from week to week. Theory homeworks are not too bad, they can be done just from reading the relevant chapters in the book. Programming ones can be challenging and take varying amounts of time (depending on who you are) but you will certainly learn how to program at the end of it.\nMidterm and final aren't all that bad if you've been keeping up with the lectures and the homeworks. They're a bit on the memorization side of things - especially the final which asked some pretty obscure questions which is why it's good to attend lecture because he often mentions random things that I noticed ended up on the test.\nI should mention that although this is intro CS, it's a pretty high level intro so don't take the class for the granted - you'll have to put in some work to get an A.\nAlso there are lots of office hours and for the most part the TAs are great so I would highly recommend popping in if you have question regarding your assignment; even if you code works, you might wanna just make sure with the TAs that your design, etc. is okay.\nWorkload:\nSee above.\n"
        },
        {
            "course_name": "Intro to Computer Science- Programming in Java",
            "review_date": "December 27, 2010",
            "review_content": "\nThis is the class that made me want to major in Computer Science. At first I only took it because it was a requirement, but Adam Cannon is a skilled lecturer. He knows how to make confusing material digestible, and his classes are enjoyable.\nI would recommend going to office hours - the TAs are generally pretty helpful, and it's useful to get feedback on your code before you submit it.\nThe programming assignments were a lot of fun, once you get into them. The book assignments (the theoretical ones) can be a pain, but they're necessary to grasp the material fully.\nIt's not necessarily the easiest class that you'll take at Columbia (unless you're already a programmer and therefore shouldn't be taking this class anyway). But it's also not the hardest - and it may even be the best and most important one you take. Make sure you take this class.\nWorkload:\n6 assignments, each with a programming part and a theoretical part. One midterm and one final (both easier than they could be, but you still need to study for them - means are in the 70s). Mean is curved to a \"high-B, not a B+\" (in his words).\n"
        },
        {
            "course_name": "Intro to Computer Science- Programming in Java",
            "review_date": "December 23, 2010",
            "review_content": "\nCannon is awesome. With a couple of masters degrees and a phd, you know he's incredibly smart, but he also keeps the class moving well with his wit. Class attendance is typically helpful, but you can get by for most topics by simply doing the assigned reading. If you do attend class, supplementation with assigned reading is still ideal. The texts for the class are pricey so get them from a friend or rent them if possible. Only one of the two, Big Java, will really be useful after the course is over, so if there's one to buy, that's it. The books are thick, but the course does not cover nearly all the chapters in them.\nWorkload:\nThis class necessitates a tremendous amount of effort and time, but it's totally worth it. The satisfaction of realizing the efficiency and power of a program you've just designed and built is unbelievable after you've spent hours debugging it. The class alternates a theoretical problem set from the book every other week with a programming project every other week. The problem sets are generally pretty simple and graded fairly, with the programming assignments much harder but graded fairly easily. The midterm and final were extremely easy, and the class is curved to something like a B+ average.\n"
        },
        {
            "course_name": "Introduction to Computers",
            "review_date": "November 24, 2009",
            "review_content": "\nAdam Cannon is wonderful. Funny, nice, knowledgeable, good at explaining things, basically everything you want a teacher to be. The Intro to Computers class (now renamed Intro to Information Science) is basically an overview for people who want to know a bit about computers but aren't going to major in Comp Sci, but I love this class so much that I've decided to start a Comp Sci minor.\nThe class is not quite a walk in the park; there is some serious work involved, but it's nowhere near unreasonable and always rewarding (see below). If you're looking for a fun, useful, not-too-tough class to fill out your schedule with, this is a great option.\nWorkload:\nThe workload is definitely manageable. Homework assignments every few weeks, one midterm, and a final. The homework assignments are not the kinds of things you can do in one night, but they are fun and you don't feel like you're wasting your time doing them. I'd suggest starting them early and going to Cannon (or the TAs) with any questions. Also, the homework assignments get progressively harder so don't expect the second one to be as easy as the first!!\n"
        },
        {
            "course_name": "Intro to Computer Science- Programming in Java",
            "review_date": "November 15, 2009",
            "review_content": "\nA good teacher. I had zero comp sci background and am doing fine in the class, he's awesome at office hours and explains things really well. A lot of people who complain about the workload also start the assignments really late, which is a bad idea. A great class and a funny teacher, i enjoyed it. \nWorkload:\ncan be a lot at times, take his advice- if you haven't made in progress in half an hour stop and get help.\nbook questions can be a drag but are pretty easy\n"
        },
        {
            "course_name": "Intro to Computer Science- Programming in Java",
            "review_date": "August 20, 2009",
            "review_content": "\nThis class the truly Terrible and unbelievably hard! It says that it is an into level class, but its not. This was the most time consuming, annoying and frustrating class I have ever taken. If you have taken AP comp sci, or have a better idea of java you will be struggling, but if you have none DO NOT TAKE! It was impossible with out outside help. \nCannon is a funny man, and class was not boring, but the subject is just impossible. The theory stuff is easy and understandable but the java is very very hard and is not taught at all, its more teach yourself everything or find someone who knows what they are doing and have them teach you. \nI learned ALOT, but in the end, not worth it. \n\nWorkload:\n4 Programming Assignments, all pretty much impossible, but very rewarding when you finish them. Don't expect to do that well on them (close to 20 hours of work for each). 4 theory problem sets, more managable but still time consuming. Midterm and final, easier than programming assignments but still VERY hard and painful. \n"
        },
        {
            "course_name": "Introduction to Computers",
            "review_date": "June 23, 2009",
            "review_content": "\nhe is a really nice prof. He was also very into his stuff. At times I felt that he went on for a bit about privacy issues but even when he did it was still interesting. The workload isnt a lot really. Except the problem sets get a bit ridic. I would suggest reaching out to him well in advance with questions about it. He is really helpful. \nWorkload:\nIts not an easy A. A reasonable B+ but def not an easy A. you will spend hours and hours trying to figure out how to do the last 3 h/w assignments. the book is soooooo boring. torture. seriously. but he says he is changing it next year so good luck with whatever you get. \n"
        },
        {
            "course_name": "Introduction to Computers",
            "review_date": "May 15, 2009",
            "review_content": "\ngreat class! A.C. is funny, likable, knows his stuff, and presents information in a way that makes a relatively intimidating topic (for non science people) feel like fun. I would highly recommend this class for anyone, especially those who have little or no experience in compsci and are interested in a light challenge.\nthe first half of the class covers things like databases, networks, computer architecture and organization (how computers actually work), and basic HTML. After the midterm, the class got more challenging, but not too much so... an introduction to programming in the language PYTHON. i found this to be really fun although it can be rather frustrating. \nfulfills the columbia college science requirement even though it isn't on the list!\nWorkload:\n5 problem sets increasing in difficulty, two weeks for each. midterm and final. really not too bad. some of the assignments are really fun like the first programming one... a third of it was logic riddles! \n"
        },
        {
            "course_name": "Introduction to Computers",
            "review_date": "January 16, 2009",
            "review_content": "\nThis class was so great. Adam is really thorough with his explanation and will always stop to make sure that people are following. We got bi-weekly assignments that tested our knowledge of the reading and during the last few weeks we had to make some programs using python. Honestly, if you want to try computer science but are worried that its going to be hard, this course should change your mind. If you need any help, go to the TA's office hours and they basically take you through everything step by step. They're really helpful with checking homework and making sure you're on the right track. \n\nWorkload:\nbi-weekly assignments, easy midterm, more difficult final\n"
        },
        {
            "course_name": "Intro to Computer Science- Programming in Java",
            "review_date": "January 11, 2009",
            "review_content": "\nThe first day of class Professor Cannon told us we should expect to be spending at least 10 hours a week doing work for the course. I thought he was joking. HE WAS NOT. This is a great class and he's pretty good at explaining concepts (if you pay attention), and he's understanding about extensions and going over certain topics more in-depth if the class needs it. But the weekly assignments were pretty difficult and/or very time-consuming. You MUST start each assignment at least 4-5 days before the due date, because you will run into problems with your programs and you need time to meet with the TA's. I found that many students taking the class had prior programming experience and they found it easier (and messed up the curve). But for the rest of us it was a grueling learning experience. I'm glad to have taken it but you need to invest time, no joke.\nWorkload:\nWeekly assignments, alternating between theory and programming. One midterm and one final. The average for the midterm was like 87 or something. The final was harder. STUDY.\n"
        },
        {
            "course_name": "Intro to Computer Science- Programming in Java",
            "review_date": "December 17, 2008",
            "review_content": "\nI was very happy to see Professor Cannon has a star, which I think he deserves.  COMS W1004 could be one of the best courses at Columbia.  I would recommend this course to any strong student up for a challenge, even one who does not need COMS as a requirement.  Professor Cannon says it is not easy and tells us which assignments are especially hard, but CS will teach you a new way of thinking about the world.  Professor Cannon covers the basics of both hardware (the physical structure of the computer) and programming, so by the time you're done with the course you will probably know which topic you like better.  Lectures supplemented the readings and helped clarify which aspects of the materials were the most important.  One of Professor Cannon's strengths was making complicated concepts understandable.  He is willing to go over the same idea more than once, even at the expense of glossing over a few simpler programming concepts that I would have liked the lectures and assignments to cover a bit more thoroughly.  The final was DEFINITELY harder than the midterm, although neither was excessively difficult.\nIt's a good idea for people without a very strong programming/hardware background to take W1004--you learn quite a bit about both and are a much more fluid programmer by the time you reach the more advanced courses.  Professor Cannon was very good at introducing us to the academic organizations and resources the CS department offers.\nThe fact that there are many TAs means that you should be able to come to a good TA's office hours (in my experience, decent to good TAing was the rule rather than the exception).  Professor Cannon is also accessible and reasonably flexible.\nWorkload:\nTHIS COURSE IS NOT A JOKE!!!  For me, the workload was 5-18 hours a week.  Start readings, assignments and exam studying at least 4 days early, because you don't know how long it will take to understand a concept or get a program to work.\n"
        },
        {
            "course_name": "Object-Oriented Programming and Design in Java",
            "review_date": "December 10, 2007",
            "review_content": "\nProfessor Cannon is an awesome teacher. The class has a really heavy workload, though. Most of what he teaches in class is in the book, but he clarifies it and makes it easier to understand. You have to learn all of Java code on your own though and it can be really frustrating because many times you won't know where to start. The TAs are EXTREMELY helpful, though. I highly recommend that you go to office hours at least once a week because they usually teach you Java concepts and code. The class may be hard and the workload tough, but its a class worth taking because you learn A LOT. \nWorkload:\nThere are 6 homeworks-but each homework has two parts, theory and programming. The theory is due a week from when it was assigned, and the programming is due two weeks after it was assigned. The workload is pretty fair in the beginning of the semester, but it gets heavy with the third homework.\nMidterm and final--hard but okay if you study well.\n"
        },
        {
            "course_name": "Object-Oriented Programming and Design in Java",
            "review_date": "February 01, 2007",
            "review_content": "\nI wish I had met the Adam Cannon everyone else seems to be talking about.  Adam Cannon's class was horrible and the class was anything but an introduction.  \n***********ATTENTION**************\nIf you do not have a computer science background and don't consider yourself a computer science guy, DO NOT TAKE THIS CLASS.  Take 1004 instead.  \nHe lies to you at the beginning and says that even if you've never touched a computer before you can do well in this class.  Nonsense! I assure you even if you have a decent CS background you WILL SUFFER.  \nI made the stupid decision to take 1007 because I thought I had enough computer science background to ace the class.  Turns out my 2 years of CS background in high school (which I had easily aced) in no way prepared me for this class.\nDespite what he says, this class is INTENDED for CS majors so if you're not a CS-major don't make my mistake, stick with 1004 or an easier CS intro class.  I wasn't the only one who had a horrible time in this class either, I know plenty of people who suffered through it and many others who dropped out altogether.\nAgain, take my warning, if you're not a CS-major DON'T take this class.\nWorkload:\nMany homework assignments, the first 2-3 were easy but soon they'll become impossible to do.  If you're not a CS guy you will NOT be able to do them anyway.\n"
        },
        {
            "course_name": "Intro to Computer Science- Programming in Java",
            "review_date": "March 29, 2006",
            "review_content": "\nProf. Cannon is awesome. He tries to make the course interesting and makes a ton of jokes. He wants everyone to do well and really makes it easy for you. The TA sessions are really helpful. If you put in the work you can def. get an A and you might even find yourself more interested in comp. sci. after a course with him\nWorkload:\nhomeworks-- not bad and if you do them they count a lot and can help your grade.\nmidterm/final, pretty straightforward with no suprises\n"
        },
        {
            "course_name": "Object-Oriented Programming and Design in Java",
            "review_date": "May 21, 2005",
            "review_content": "\nA great professor. He is nice, invites commentary and feedback during class, and even cracks a few jokes here and there. His lectures are generally clear except things got a little confusing during the data structures section, when we covered a top that our book did not handle at all (red-black trees). He likes to make things challenging but not impossible. Good office hours.\nWorkload:\n6 programming assignments of increasing difficulty. These can take a long time to complete, so try to start early. Midterm and a final. The midterm was easier than the final, which had some fairly difficult questions on it. \n"
        },
        {
            "course_name": "Object-Oriented Programming and Design in Java",
            "review_date": "January 24, 2005",
            "review_content": "\nBelieve what you read/hear about this guy. He is AMAZING. He is nice about extensions (he's willing to give you extra time on one of the five assignments- meaning you just can't do it all the time). If you attend lectures and understand the material you will do very well on the tests. I knew some java before the class, so that made it easier, but Prof. Cannon will help you- if you're working on it, so is he. He makes himself and the TAs very available to you for help. In class he always stops and attempts to make sure everyone really understands. His lectures are generally pretty interesting and he is really a find. I am a computer science major, however, so perhaps that skews my opinion.\nWorkload:\n5 assignments, 1 midterm, 1 final. You do need to spend time on the assignments, do not leave them to the VERY last minute. Curve not too generous, but if you work you can do very well.\n"
        },
        {
            "course_name": "Object-Oriented Programming and Design in Java",
            "review_date": "December 31, 2004",
            "review_content": "\nI totally agree with the other reviews. He's a great professor, so take his class. What I found the greatest about him is that he taught more than the course material. Like, he told us in the beginning of the semester that what he emphasizes in class and the vocab definitions he writes on the board are probably going to be on the exam. Such hint is so useful when you are bombarded with tons of vocabs and info that you encounter in the textbook; because then you know which the primary and important stuff are and which are not. Also, he explicitly provided studying strategies for the midterm, which, of course, can be used in other classes. However, I didn't find him all that helpful when it came to seeing him during office hours or through email; so I got help the TA's who were simply great (I had Rachel Goldman, Cheryl Lau, and Lauren Wilcox). They basically saved my life, rather than the professor (yet that's just me; other students maybe didn't need as much help). However, I really liked prof. Cannon; it's worth taking his class and getting to know him.\n"
        },
        {
            "course_name": "Object-Oriented Programming and Design in Java",
            "review_date": "December 29, 2004",
            "review_content": "\nProf. Cannon was simply amazing!  He had this way of explaining difficult concepts in a way that made it easy to understand, and he didn't mind going over the same concept over and over again until everyone in the class was clear.  He also made it very easy to go to office hours (he encouraged it every week).  \nProf. Cannon warned us in the beginning of the class that CS1007 is a rigorous introduction to computer science and that students who had no previous programming experience should consider taking CS1004.  I had no previous programming experience, but I decided to stay in CS1007 because I knew that I would learn more in that class. Prof. Cannon said that students without prior programming experience would find the class difficult (even those who had a lot of programming experience had a hard time), but the class is do-able and Prof. Cannon made sure to say that he would be as supportive as he can.  And he was.  He also made class fun -- he is funny and witty and actually makes you want to go to class (and you should go.  Many times he covered concepts that weren't in the textbook, and we needed to know those concepts for the exams and to complete our homework assignments).\nIf you're looking for an easy A in computer science, then CS1007 is not for you.  Take Professor Cannon's advice and take CS1004 (though I'm not sure what the workload is in that class.  I know it's easier than 1007, though).  But if you're looking for a class that will challenge you and make you proud of all that you've learned, then be brave and take CS1007 and make sure to take it with Prof. Cannon.  He is one of the best professors I've encountered so far at Columbia.  You will learn a whole lot of programming and will be surprised about the things you learn to do.\nWorkload:\n5 homework assignments each consisting of 2-3 parts (a problem set and 1-2 programming projects).  Every other assignment is considered difficult (they were all difficult to me.  And homework#2 was a KILLER!) There was also a midterm and a final.  Class attendance is required.\n"
        },
        {
            "course_name": "Object-Oriented Programming and Design in Java",
            "review_date": "December 12, 2004",
            "review_content": "\nhe's so nice and very relaxing while teaching\napproachable... he's willing to have an appointment with you if you can't make it to his\noffice hours\ntake his class!\nWorkload:\n5 hws 1 midterm 1 finalthe homeworks are pretty tough, and take long time to finish it\n"
        },
        {
            "course_name": "Object-Oriented Programming and Design in Java",
            "review_date": "June 06, 2004",
            "review_content": "\nAwsome guy, very aproachable in and out of class. Often in his office and not to upset if you stop buy. He is a fun charcter, his unix prompt displays \"Command me baby:\" which everyone got a chuckle from. The class is easy if you are into comp sci and a nightmare if you are not. Great intro to java course though, highly suggested for all people considering a computer science major. I decided to do it because of this course as well as a friend of mine. \nWorkload:\nHeavy for non geeks, Geeks are fine. Midterm, final, 4-6 homeworks take a long time though on the homeworks.\n"
        },
        {
            "course_name": "Object-Oriented Programming and Design in Java",
            "review_date": "January 03, 2004",
            "review_content": "\nProfessor Cannon was great. He was very approachable. If office hours didn't work out for you or if he felt you needed extra help, he would make time for you outside of his normal Office Hours. He is also extremely witty (even obscene and completely politically incorrect at times). However, the content of the course was too difficult. I am not a ComSci major, but this was even tough for someone majoring in the topic. He warned us that we should consider switching into 1004 if we didn't feel up to the challenge. I took 1007 because I wanted to study with Professor Cannon. I took his 1001 class and loved it. I should have swallowed my pride and took the easier class. If you are looking for an easy-A, this is not the class for you, but if you are looking for a challenge and struggle, have fun. His wit and humor could be worth the trouble.\nWorkload:\n5-6 programming projects, every other one is considered \"difficult\" (but they were all difficult). Plan on spending many hours in TA Office Hours trying to figure out what to do. If you do not complete all of the assignments, Professor Cannon warns you that you cannot pass.\n"
        },
        {
            "course_name": "Object-Oriented Programming and Design in Java",
            "review_date": "December 28, 2003",
            "review_content": "\nOn the first day of class Cannon said that this course required hours of frustration in front of the computer, and he was telling the truth.  Projects are difficult and long, but they do a good job of teaching java.  If you do the projects and attend lecture, exams aren't too painful, and he will look over poor exam grades if you do well on the projects (get them to work).  The curve is very generous reflecting the heavy workload.  Overall, this course can be hell while you are in it, but in the end your knowledge of computer science is extensive.\n"
        },
        {
            "course_name": "Intro to Computer Science- Programming in Java",
            "review_date": "December 07, 2003",
            "review_content": "\nOut of the 25+ professors I have had, Professor Cannon is probably one of the WORST professors I have ever had.  He's a very nice person but he is awful at instructing and clearly explaining the course material.  He does not provide a syllabus, which I feel is helpful when reviewing for the course.  This course is an INTRODUCTION course which means NOT EVERYONE enrolled in the course has has prior experience with Computer Science.  He quickly covers each topic providing a few very easy examples and then excepts you to be a professional programmer on the projects and exams.  Stay away from this class unless you have to take it for a requirement . . . I did the mistake of taking this class because I thought it would be \"interesting.\"  I haven't learned anything!  \nWorkload:\nFive HW assignments -- pretty difficult and you don't feel prepared for any of them . . . unless of course you have had experience with Computer Science before.  One midterm exam and one final exam (comprehensive), again , difficult if you have no background.  He does curve grades.  \n"
        },
        {
            "course_name": "Discrete Mathematics",
            "review_date": "May 23, 2003",
            "review_content": "\nGreat teacher, good lecturer and cares about the students a lot. \nHe knows a lot about discrete math and he's very enthusiastic about it. Even though he covers number theory which other teachers who teach discrete math don't, this class is still very vaulable and u'll learn a lot from him. His tests aren't bad at all.\nWorkload:\n9 problem sets, midterm and final\n"
        },
        {
            "course_name": "Discrete Mathematics",
            "review_date": "May 20, 2003",
            "review_content": "\nUnlike the previous reviews, I did not like this professor.  Before the first midterm, we learned two chapters, then afterwards we sped through about 6 chapters, learning a little from each.  He is very disorganized and doesn't know how to use his time properly.  Coming to class was not helpful since everything he taught was in the textbook.  Most of the time the text explained things much more clearer.  Going to class will not help at all with the homeworks and don't expect to get them back in a timely manner.  If you take this class with him, be prepared to do a lot of proofs.  This man loves to do proofs..he thinks they're fun. \nWorkload:\nHeavy.  Problem sets biweekly but each set takes a LONG time.  The earlier you start the better. \n"
        },
        {
            "course_name": "Object-Oriented Programming and Design in Java",
            "review_date": "March 11, 2003",
            "review_content": "\nProfessor Cannon was one of my favorite instructors at Columbia. He's really nice, and he makes learning about what some consider to be a difficult subject much more easy. During his first lecture, Professor Cannon said that students shouldn't be intimidated by the fact that he works at Los Almos because he \"isn't creating Terminator.\" Definitely an interesting class, I learned a lot to prepare me for 1004\nWorkload:\nabout 7 homework assignments, text reading, midterm, final\n"
        },
        {
            "course_name": "Scientific Computation I",
            "review_date": "February 24, 2003",
            "review_content": "\nHe is definitely one of the best professors I have had!  His laid back style of teaching is really something that none of the other professors possess.  He is very approachable and friendly, and tries to get some participation during class.  The material is somewhat dull, but since many of the CS majors have to take SciComp anyway, might as well take it with him.  The workload isn't bad at all, and the tests are rather easy, since he asks straight forward questions.\nWorkload:\nA few problems sets, two or three EASY programming assignments, 1 EASY midterm, 1 EVEN EASIER final\n"
        },
        {
            "course_name": "Introduction to Computers",
            "review_date": "June 18, 2002",
            "review_content": "\nHis teaching style opened a subject that I never imagined myself being interested in. I highly recommend him as an instructor. One caveat is don't let him convince you that the tests will be easy. Do the reading!\n"
        },
        {
            "course_name": "Object-Oriented Programming and Design in Java",
            "review_date": "May 26, 2002",
            "review_content": "\nTake any class with this man!! Absolutely great. One of the nicest ppl you will ever find and he does anything to help his students. He is a dynamic prof. who even makes smthing dry like cs funny! A rare gem in the otherwise mediocre cs dept. Why can't every prof at Columbia be like him?? \nWorkload:\nReally fair workload. Generous grader. \n"
        },
        {
            "course_name": "Introduction to Computers",
            "review_date": "May 24, 2002",
            "review_content": "\nProf Cannon is one of the rare teachers who truly wants to involve the students in the class. This class is taugh purely for us non-science people in the college. While it does not fulfill any requirement, Prof Cannon does all he can to get you involved in the class and interested in computers and computer-science in general. His light attitude and wonderful sense of humor makes the class fun and very enjoyable. Prof. Cannon is also incredibly accessible, responding incredibly quickly to e-mails and doing all he can to ensure that every student of his enjoys the class. While some parts of various lectures are rather boring, Prof Cannon always tries to lighten the mood by telling a few, jokes, making fun of himself, or just going onto a more interesting topic when he notices students starting to drift off. The class covers everything from a history of computer science, to a very little bit of programming. A great class for someone who thinks s/he might want to do Comp-Sci but doesn't know what it really is. This class was one of the best I have taken here at Columbia. Prof. Cannon is definitely one to look for.\nWorkload:\n5-8 Problem sets, very easy midterm and in class final. Problem sets were essentially book questions, where merely searching the chapter would give answers. Midterm and final both had list of terms to identify and fairly easy longer type questions. Grades very easily. Curves class to a B+ or so, and a 74 on the midterm was a B+. Easy A if you do the problem sets and identify the terms posted on his website for the exams.\n"
        },
        {
            "course_name": "Introduction to Computers",
            "review_date": "February 20, 2002",
            "review_content": "\nHis teaching is reasonable, but made fun by his jokes regarding we, the not-science-inclined humanities students. He's young, and definitely played soccer in high school. You feel sorry for him because somehow you have to worry about a teacher whose mother calls him during class (yes, this happened), and who lives (alone?) with a cat named Mickey Mouse (yes, that is his cat's name). If you email him with questions and concerns, he writes back promptly. I feel that he tries to relate to students almost too much, however, since he basically tells us we don't have to show up for lectures and that it's okay to fall asleep. Of course he asked for it, right? Many of us take these two aforementioned suggestions regarding physical and mental non-attendance to heart. Fun on the days I made it to class.\nWorkload:\nSupposedly bi-weekly homeworks. Straightforward problems and themes. Goes by the book, and syllabus is online. Beware, some homework requires we lowly humanities students to remember calculus concepts from high school.\n"
        },
        {
            "course_name": "Object-Oriented Programming and Design in Java",
            "review_date": "February 03, 2002",
            "review_content": "\nAdam Cannon is the best teacher I have had at Columbia. He is a really cool guy and an awesome person. He has a great sense of humor..his jokes are funny and he is so cool. All the people I've talked to about him think hes a great teacher. His lectures are really good...he's great at explaining complex ideas. He is always willing to help. He sincerely cares about his students and how they do in his class. He's a great teacher and I've also heard that many of his female students have had crushes on him. \nWorkload:\nIt's a CS course so there is alot of work, but he's always willing to help.\n"
        },
        {
            "course_name": "Object-Oriented Programming and Design in Java",
            "review_date": "April 05, 2001",
            "review_content": "\nAmazing! Has a wonderful sense of humor and keeps the class flowing and interesting -- keeping in mind that this is a CS class, that's unbelievable. He actually incorporates such devices as comedy, wit, and humanity into an intro to CS class. A CS class! He is absolutely a must take for CS. Cannon is fabulous! Any class he teaches is worth taking. Any professor whose computer's DOS command line reads: is a must take! While first time CS students may struggle at the beginning, it's largely due to the sheer bombardment of new material that has to be absorbed when learning to program for the first time (many students don't take Cannon's studying suggestions seriously -- as he says he expects since he wouldn't have listened to himself when he was an undergrad). The workload is very do-able though, especially compared to what Data Structures is alleged to laden you with.\nWorkload:\nBiweekly assignments. Every other one is a \"hard\" assignment. Fairly easy midterm if you know what you're doing.\n"
        },
        {
            "course_name": "Object-Oriented Programming and Design in Java",
            "review_date": "December 31, 1999",
            "review_content": "\nProfessor Cannon is your classic young, nice guy professor, who just wants to get in good with his students. Despite having over 200 students, if you reach out to him, he'll never turn the cold shoulder. He is willing to stay in his office until all hours of the night, waiting until every single student has received attention. Bearing a bit of a resemblance to Dave Matthews, he does happen to be a really cool guy. He also exudes a real enthusiasm for the subject, which is a bit of a breath of fresh air. Unfortunately, this comes at the expense of really knowing the material very well. He forgot the JAVA syntax frequently, and occasionaly was at a loss for an answer to a student's question. For people without any programming experience at all, expect to be really lost for the first month or so - Professor Cannon has a hard time getting fundamental concepts across in a coherent manner. Luckily, if you're willing to go to his office hours, and if you attend recitation, these things really do get cleared up, and by the end you really do have a strong grasp of JAVA. I would absolutely recommend him to anyone considering taking computer science.\nWorkload:\nBi-weekly assignments which can be killer if you leave them for the night before. From what I'm told, his assignments are actually easier than the ones previous 1007 professors have assigned. LONG midterm, and a relatively easy final.\n"
        }
    ]
}