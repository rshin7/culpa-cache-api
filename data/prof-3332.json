{
    "prof_info": [
        {
            "prof_name": "David Elson",
            "prof_id": 3332,
            "total_reviews": 3
        }
    ],
    "reviews": [
        {
            "course_name": "Data Structures in Java",
            "review_date": "December 18, 2008",
            "review_content": "\nElson is a phd student but is a good professor overall. Not a class for computer science majors, but this class is a lot of work. Elson does his best to make it manageable, he knows that most of the class struggles with the programming sections, so he gives you late days and tries to help with the homework. Overall, a hard class that takes a lot of time, but if you are good at computer science, this should be no sweat. If not, then watch out.\nWorkload:\nHeavy, very heavy. Five assignments(theory and programming) that take about 10-12 hrs each assignment. Midterm which is long, and final which is more reasonable.\n"
        },
        {
            "course_name": "Data Structures in Java",
            "review_date": "March 11, 2008",
            "review_content": "\nThough this is David Elson's first semester teaching, I think he's done an outstanding job of it. I've always marveled at why I seem to enjoy classes taught by graduate students better than I do classes taught by actual professors, but I think it is because graduate students are more understanding of how to lead a class of undergrads in such a way that they will be interested and entertained.\nDavid Elson has two qualities that really qualify him as an excellent teacher, 1) excellent English and ability to explain concepts and 2) a wicked sense of humor.\nI have never missed a Data Structures class because of this; this was true of Chris Murphy's 1004 class I took last semester, too. David Elson really CARED that the students are learning the material -- he explains things clearly, does relevant examples, cracks corny jokes, and always tries to encourage class participation (a noble endeavor indeed!). His availability is also extremely flexible -- he answers emails even at excruciating times like 2 AM on a Friday or Saturday night, which really helps for the people who chronically try to complete hw assignments two days before the due date. The homework assignments started out rather tedious and long, but David took into account the class's complaints / suggestions and lessened the workload to really help us learn the implementations of data structures instead of spending 40 hours struggling with other irrelevant code. I love his programming assignments -- thought they were totally relevant and even FUN, dare I say. This is one of the few classes I ENJOY doing work for.\nAll in all, I thought Data Structures would be the death of me this semester, but I ended up loving it and learning far more than I thought I would. Thank you, David!!!\nWorkload:\nsee other review for breakdown. I should mention there was quite a bit of extra credit (mostly extra programming!), and if you do it all, it can be helpful enough to push you 1/3 of a letter grade higher =)\n"
        },
        {
            "course_name": "Data Structures in Java",
            "review_date": "December 17, 2007",
            "review_content": "\nI thought David was hysterical. A PhD candidate with a sense of humor as keen as his is rare. Well, some people loved him. Others thought he was a bit aloof. \nWhat was best about him was his analogies and drawings. \nHe makes sure the class knows what is going on before proceeding. Most people, however, don't want to raise their hands.\nVery approachable with fascinating stories to tell I highly recommend you take this course with Elson. For a point of reference, if you took AP Comp Sci AB in high school you'll be fine until the last week where he studies things like NP completeness.\n\nWorkload:\nLight but the programming sections were a pain even for people who knew java. The Theory was also a pain at times but overall wasn't must of a problem. I wish I had gone to the TA's for more help though. 50% HW, 20% Midterm, 30% Final. All easy but the HW, as stated earlier, is tedious. You'll get the concepts far before you work out the bugs in your code.\n"
        }
    ]
}